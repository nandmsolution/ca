[{"/home/master/Code/noorani_solution/ca/src/index.js":"1","/home/master/Code/noorani_solution/ca/src/App.js":"2","/home/master/Code/noorani_solution/ca/src/reportWebVitals.js":"3","/home/master/Code/noorani_solution/ca/src/components/navbar/Navbar.js":"4","/home/master/Code/noorani_solution/ca/src/components/carousel/Carousel.js":"5"},{"size":506,"mtime":1612337416480,"results":"6","hashOfConfig":"7"},{"size":3850,"mtime":1612465463412,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612337066183,"results":"9","hashOfConfig":"7"},{"size":1799,"mtime":1612461632276,"results":"10","hashOfConfig":"7"},{"size":2316,"mtime":1612461633982,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1niva99",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/home/master/Code/noorani_solution/ca/src/index.js",[],["25","26"],"/home/master/Code/noorani_solution/ca/src/App.js",[],"/home/master/Code/noorani_solution/ca/src/reportWebVitals.js",[],"/home/master/Code/noorani_solution/ca/src/components/navbar/Navbar.js",["27"],"import { useState } from \"react\";\nexport const Navbar = () => {\n  const [toggle, setToggle] = useState(true);\n  const navItems = [\"Home\", \"Services\", \"About Us\", \"Contact Us\"];\n  return (\n    <div>\n      <header>\n        <div className=\"p-4  md:flex items-center md:justify-between\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-3xl text-indigo-400 font-bold\"> Brand Name </h1>\n            <button\n              onClick={() => {\n                setToggle(!toggle);\n              }}\n            >\n              <label\n                for=\"menu-toggle\"\n                className=\"cursor-pointer  md:hidden block\"\n              >\n                <svg\n                  className=\"fill-current  text-gray-900\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <title>menu</title>\n                  <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"></path>\n                </svg>\n              </label>\n            </button>\n          </div>\n          <nav>\n            <ul\n              className={\n                toggle\n                  ? \"hidden md:flex mt-5 md:mt-0 pt-3 md:pt-0 items-center md:justify-center\"\n                  : \"block  md:flex mt-5 md:mt-0 pt-3 md:pt-0 items-center md:justify-center\"\n              }\n            >\n              {navItems.map((item) => (\n                <li>\n                  <a className=\"px-3 pt-3 md:pt-0 cursor-pointer  block text-2xl border-b-2 border-transparent hover:border-indigo-400 \">\n                    {item}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n    </div>\n  );\n};\n","/home/master/Code/noorani_solution/ca/src/components/carousel/Carousel.js",["28"],"import { useState } from \"react\";\n\nexport const Carousel = ({ slides }) => {\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"relative flex flex-col justify-center items-center mt-2 pt-2\">\n      <div className=\" z-50 mx-4 px-2\">\n        <button\n          className=\"border-transparent absolute  top-1/2 left-5\"\n          onClick={prevSlide}\n        >\n          <svg\n            className=\"w-10 \"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </button>\n        <button className=\"absolute top-1/2 right-5\" onClick={nextSlide}>\n          <svg\n            className=\"w-10\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </button>\n      </div>\n      {slides.map((slide, index) => {\n        return (\n          <div className=\"mx-1 px-1\">\n            <div\n              className={\n                index === current\n                  ? \"transition duration-1000 opacity-100 transfom scale-105 \"\n                  : \"transition duration-1000 ease-out opacity-0\"\n              }\n              key={index}\n            >\n              {index === current && (\n                <img\n                  src={slide}\n                  alt=\"travel image\"\n                  className=\"w-100 border-gray-900 lg:h-screen h-96\"\n                />\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":43,"column":19,"nodeType":"35","endLine":43,"endColumn":138},{"ruleId":"36","severity":1,"message":"37","line":66,"column":17,"nodeType":"35","endLine":70,"endColumn":19},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]